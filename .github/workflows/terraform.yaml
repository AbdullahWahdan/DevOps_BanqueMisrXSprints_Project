name: CD - Terraform

on:
  workflow_call:
    inputs:
      image-tag:
        required: true
        type: string
    outputs:
      infra-status:
        description: "Terraform apply result"
        value: ${{ jobs.terraform.outputs.status }}

jobs:
  terraform:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.tf_step.outputs.result }}
    steps:
      - uses: actions/checkout@v5
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.1.7

      # Ensure Terraform backend bucket/table exist (idempotent)
      - name: Bootstrap backend (S3 bucket and DynamoDB table)
        run: |
          set -e
          BUCKET_NAME="wahdan-state-bucket-2"
          TABLE_NAME="terraform-lock-1"

          if ! aws s3api head-bucket --bucket "$BUCKET_NAME" 2>/dev/null; then
            aws s3api create-bucket --bucket "$BUCKET_NAME" --region us-east-1 --create-bucket-configuration LocationConstraint=us-east-1 || true
            aws s3api put-bucket-versioning --bucket "$BUCKET_NAME" --versioning-configuration Status=Enabled
            aws s3api put-bucket-encryption --bucket "$BUCKET_NAME" --server-side-encryption-configuration '{"Rules":[{"ApplyServerSideEncryptionByDefault":{"SSEAlgorithm":"AES256"}}]}'
          fi

          if ! aws dynamodb describe-table --table-name "$TABLE_NAME" >/dev/null 2>&1; then
            aws dynamodb create-table \
              --table-name "$TABLE_NAME" \
              --attribute-definitions AttributeName=LockID,AttributeType=S \
              --key-schema AttributeName=LockID,KeyType=HASH \
              --billing-mode PAY_PER_REQUEST
          fi

      - id: tf_step
        run: |
          terraform init
          if terraform apply -auto-approve; then
            echo "result=success" >> $GITHUB_OUTPUT
          else
            echo "result=failure" >> $GITHUB_OUTPUT
            exit 1
          fi
        working-directory: ./Terraform/team-01
